//  This file was generated by LevelHelper
//  http://www.levelhelper.org
//
//  LevelHelperLoader.h
//  Created by Bogdan Vladu
//  Copyright 2011 Bogdan Vladu. All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////
//
//  This software is provided 'as-is', without any express or implied
//  warranty.  In no event will the authors be held liable for any damages
//  arising from the use of this software.
//  Permission is granted to anyone to use this software for any purpose,
//  including commercial applications, and to alter it and redistribute it
//  freely, subject to the following restrictions:
//  The origin of this software must not be misrepresented; you must not
//  claim that you wrote the original software. If you use this software
//  in a product, an acknowledgment in the product documentation would be
//  appreciated but is not required.
//  Altered source versions must be plainly marked as such, and must not be
//  misrepresented as being the original software.
//  This notice may not be removed or altered from any source distribution.
//  By "software" the author refers to this code file and not the application 
//  that was used to generate this file.
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __LHBATCH_NODE__
#define __LHBATCH_NODE__

#include "cocos2d.h"
#include "Box2D/Box2D.h"

using namespace cocos2d;

class LHLayer;
class LHSprite;
class LevelHelperLoader;
class LHDictionary;

class LHBatch : public CCSpriteBatchNode
{
public:
    void removeSelf();
    LevelHelperLoader* parentLoader();
    
    virtual bool initWithDictionary(LHDictionary* dictionary,  LHLayer* layer);
    
    virtual ~LHBatch(void);
    LHBatch();
    
    
    static LHBatch* batchWithDictionary(LHDictionary* dictionary,  LHLayer* layer);
    static LHBatch* batchWithSheetName(const std::string& sheetName, const std::string& spriteHelperFile);

    
    static bool isLHBatch(CCNode* node);
    
    //if sprite is child of this batch node you can retrieve it
    LHSprite* spriteWithUniqueName(const std::string& name);
    
    CCArray* allSprites();
    CCArray* spritesWithTag(int tag);
    
    const std::string& getUniqueName(){return uniqueName;};
    std::string getImagePath();

    std::string getSHFile();
    void        setSHFile(const std::string& file);
private:
    std::string uniqueName;
    std::string imagePath;
    std::string shFile;
    
    friend class LHLayer;
    
    void addChildFromDictionary(LHDictionary* childDict);
};

#endif
